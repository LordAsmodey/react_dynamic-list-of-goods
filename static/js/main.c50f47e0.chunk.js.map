{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","className","cn","color","name","id","getAll","fetch","then","response","json","App","useState","setGoods","isLoading","setIsLoading","handlerGetGoods","useCallback","amount","a","allGoods","sort","good1","good2","localeCompare","slice","firstFiveGoods","filter","redGoods","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"qQAQaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OACRC,UAAWC,IAAGF,EAAKG,OAHrB,SAKGH,EAAKI,MAJDJ,EAAKK,U,MCPX,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,ICDMC,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOd,EAAP,KAAce,EAAd,KACA,EAAkCD,mBAAS,IAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KAEMC,EAAkBC,sBAAW,uCAAC,WAAOC,GAAP,SAAAC,EAAA,sDAClCJ,EAAaG,GADqB,KAE1BA,EAF0B,OAG3B,QAH2B,OAU3B,SAV2B,OAiB3B,QAjB2B,8BAI9BZ,IAASE,MAAK,SAAAY,GACZP,EAASO,GACTL,EAAa,OANe,mCDF7BT,IACJE,MAAK,SAAAV,GAAK,OAAIA,EACZuB,MAAK,SAACC,EAAOC,GACZ,OAAOD,EAAMlB,KAAKoB,cAAcD,EAAMnB,SACrCqB,MAAM,EAAG,MCSEjB,MAAK,SAAAkB,GACfb,EAASa,GACTX,EAAa,OAbe,mCDM7BT,IACJE,MAAK,SAAAV,GAAK,OAAIA,EAAM6B,QAAO,SAAA3B,GAAI,MAAmB,QAAfA,EAAKG,YCWvBK,MAAK,SAAAoB,GACjBf,EAASe,GACTb,EAAa,OApBe,qGAAD,sDA2BhC,IAEH,OACE,sBAAKd,UAAU,UAAf,UACE,uDAEA,wBACEA,UAAWC,IAAG,oBACZ,CAAE,aAA4B,QAAdY,IAClBe,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMd,EAAgB,QALjC,4BAUA,wBACEf,UAAWC,IAAG,iBACZ,CAAE,aAA4B,SAAdY,IAClBe,KAAK,SACL,UAAQ,oBACRC,QAAS,kBAAMd,EAAgB,SALjC,gCAUA,wBACEf,UAAWC,IAAG,mBACZ,CAAE,aAA4B,QAAdY,IAClBe,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMd,EAAgB,QALjC,4BAUA,cAAC,EAAD,CAAWlB,MAAOA,QCzExBiC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c50f47e0.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        className={cn(good.color)}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods\n      .sort((good1, good2) => {\n        return good1.name.localeCompare(good2.name);\n      }).slice(0, 5)); // sort and get the first 5\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(good => good.color === 'red')); // get only red\n};\n","import React, { useCallback, useState } from 'react';\nimport cn from 'classnames';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport 'bulma';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { Good } from './types/Good';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [isLoading, setIsLoading] = useState('');\n\n  const handlerGetGoods = useCallback(async (amount: string) => {\n    setIsLoading(amount);\n    switch (amount) {\n      case 'all':\n        getAll().then(allGoods => {\n          setGoods(allGoods);\n          setIsLoading('');\n        });\n        break;\n\n      case 'five':\n        get5First().then(firstFiveGoods => {\n          setGoods(firstFiveGoods);\n          setIsLoading('');\n        });\n        break;\n\n      case 'red':\n        getRedGoods().then(redGoods => {\n          setGoods(redGoods);\n          setIsLoading('');\n        });\n        break;\n\n      default:\n        break;\n    }\n  }, []);\n\n  return (\n    <div className=\"App p-5\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        className={cn('button is-primary',\n          { 'is-loading': isLoading === 'all' })}\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => handlerGetGoods('all')}\n      >\n        Load all goods\n      </button>\n\n      <button\n        className={cn('button is-info',\n          { 'is-loading': isLoading === 'five' })}\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => handlerGetGoods('five')}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        className={cn('button is-danger',\n          { 'is-loading': isLoading === 'red' })}\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => handlerGetGoods('red')}\n      >\n        Load red goods\n      </button>\n\n      <GoodsList goods={goods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}